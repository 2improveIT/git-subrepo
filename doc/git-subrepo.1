.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GIT\-SUBREPO" "1" "December 2013" "" ""
.
.SH "NAME"
\fBgit\-subrepo\fR \- Git Submodule Alternative
.
.P
 \fIhttps://travis\-ci\.org/ingydotnet/git\-subrepo\fR
.
.SH "Synopsis"
.
.nf

git subrepo clone <repo\-url> [<subdir>]
git subrepo pull <subdir>
git subrepo push <subdir>
git subrepo status [<subdir>]
.
.fi
.
.SH "Description"
This git command clones an external git repo and merges it into a subdirectory of your repo\. Later on, upstream changes can be pulled in, and local changes can be pushed back\. Simple\.
.
.SH "Benefits"
This command is an improvement on \fBgit\-submodule\fR and \fBgit\-subtree\fR; two other git commands with similar goals, but various problems\.
.
.P
This command assumes there are 3 main roles of people interacting with a repo, and attempts to serve them all well:
.
.IP "\(bu" 4
owner \- The person who authors/owns/maintains a repo\.
.
.IP "\(bu" 4
users \- People who are just using/installing the repo\.
.
.IP "\(bu" 4
collaborators \- Other people who commit code to the repo and subrepos\.
.
.IP "" 0
.
.P
The \fBgit\-subrepo\fR command benefits these roles in the following ways:
.
.IP "\(bu" 4
Extremely simple and intuitive commandline usage\.
.
.IP "\(bu" 4
Users get the repo and all subrepos just by cloning the repo\.
.
.IP "\(bu" 4
Collaborators know when a subdir is a subrepo\.
.
.IP "\(bu" 4
Owners are warned about commits with files in both the repo and subrepo\.
.
.IP "\(bu" 4
Owners do not deal with any of the usual complications of keeping submodules in sync\.
.
.IP "\(bu" 4
Subrepos can contain other subrepos\.
.
.IP "\(bu" 4
Moving/renaming a subrepo subdir just works\.
.
.IP "" 0
.
.SH "Installation"
Get the source code from GitHub:
.
.IP "" 4
.
.nf

git clone git@github\.com:ingydotnet/git\-subrepo
.
.fi
.
.IP "" 0
.
.P
Then run:
.
.IP "" 4
.
.nf

make test
make install        # Possibly with \'sudo\'
.
.fi
.
.IP "" 0
.
.SH "Commands"
.
.IP "\(bu" 4
\fBgit subrepo clone <repository> [<subdir>] [\-b <branch>]\fR
.
.IP "" 0
.
.P
This command adds a repository as a subrepo in a subdir of your repository\. It is similar in feel to \fBgit clone\fR\. You just specify the remote repo url, and optionally a sub\-directory and/or branch name\. The repo will be fetched and merged into the subdir\. The subrepo history is not added to your repo history, but a commit is added that contains the reference information\. This information is also stored in a special file called \fB<subdir>/\.gitrepo\fR\. The presence of this file indicates that the directory is a subrepo\.
.
.IP "\(bu" 4
\fBgit subrepo pull <subdir>\fR
.
.IP "" 0
.
.P
Update the subdir with the latest remote changes\. The subdir must be a subrepo (must contain a \.gitrepo file)\.
.
.IP "\(bu" 4
\fBgit subrepo push <subdir>\fR
.
.IP "" 0
.
.P
Split out the commits made to the subdir, and push them upstream\.
.
.IP "\(bu" 4
\fBgit subrepo status [<subdir>]\fR
.
.IP "" 0
.
.P
Get the status of a subrepo\. If no subdir is provided, get the status of all subrepos\.
.
.SH "Status"
This software is very new (as of 1 Dec 2013)\. It has a test suite (run \fBmake test\fR), but surely has many bugs\. If you have expertise in this area, please review the code, and file issues on anything that seems wrong\.
.
.SH "Notes"
The \fBgit\-subrepo\fR repo itself has two subrepos\. They are under the \fB\./ext/\fR subdir\.
.
.P
The \fBpull\fR command currently rebases the remote changes\. This behavior may change\.
.
.SH "Author"
Written by Ingy döt Net \fIingy@ingy\.net\fR
.
.SH "Copyright"
Copyright 2013 Ingy döt Net
