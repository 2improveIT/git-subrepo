.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GIT\-SUBREPO" "1" "February 2014" "" ""
.
.SH "NAME"
\fBgit\-subrepo\fR \- Git Submodule Alternative
.
.P
 \fIhttps://travis\-ci\.org/ingydotnet/git\-subrepo\fR
.
.SH "Synopsis"
.
.nf

git subrepo help

git subrepo clone <repo\-url> [<subdir>]
git subrepo pull <subdir> [\-\-<merge\-strategy>]
git subrepo push <subdir> [\-\-<merge\-strategy>]
git subrepo checkout <subdir>
git subrepo status [<subdir>]

git subrepo version
.
.fi
.
.SH "Description"
This git command clones an external git repo and merges it into a subdirectory of your repo\. Later on, upstream changes can be pulled in, and local changes can be pushed back\. Simple\.
.
.SH "Benefits"
This command is an improvement on \fBgit\-submodule\fR and \fBgit\-subtree\fR; two other git commands with similar goals, but various problems\.
.
.P
This command assumes there are 3 main roles of people interacting with a repo, and attempts to serve them all well:
.
.IP "\(bu" 4
owner \- The person who authors/owns/maintains a repo\.
.
.IP "\(bu" 4
user \- People who are just using/installing the repo\.
.
.IP "\(bu" 4
collaborator \- People who commit code to the repo and subrepos\.
.
.IP "" 0
.
.P
The \fBgit\-subrepo\fR command benefits these roles in the following ways:
.
.IP "\(bu" 4
Extremely simple and intuitive commandline usage\.
.
.IP "\(bu" 4
Users get your repo and all your subrepos just by cloning your repo\.
.
.IP "\(bu" 4
Collaborators know when a subdir is a subrepo (it has a \.gitrepo file)\.
.
.IP "\(bu" 4
Owners do not deal with the complications of keeping submodules in sync\.
.
.IP "\(bu" 4
Subrepos can contain other subrepos\.
.
.IP "\(bu" 4
Branching with subrepos just works\.
.
.IP "\(bu" 4
Moving/renaming a subrepo subdir just works\.
.
.IP "\(bu" 4
Your git history is kept squeaky clean\.
.
.IP "\(bu" 4
Every clone and pull is just one commit (plus a merge)\.
.
.IP "\(bu" 4
Upstream history is condensed into one commit\.
.
.IP "\(bu" 4
A subrepo (and all related history) can be removed in one command\.
.
.IP "" 0
.
.P
Note that users never need to install \fBgit\-subrepo\fR, and even collaborators only need it when they want to push/pull\.
.
.SH "Installation"
Get the source code from GitHub:
.
.IP "" 4
.
.nf

git clone git@github\.com:ingydotnet/git\-subrepo
.
.fi
.
.IP "" 0
.
.P
Then run:
.
.IP "" 4
.
.nf

make test
make install        # Possibly with \'sudo\'
.
.fi
.
.IP "" 0
.
.P
To use this without installing:
.
.IP "" 4
.
.nf

export GIT_EXEC_PATH="/path/to/git\-subrepo/lib:$(git \-\-exec\-path)"
.
.fi
.
.IP "" 0
.
.SH "Commands"
.
.IP "\(bu" 4
\fBgit subrepo clone <repository> [<subdir>] [\-b <upstream\-branch>]\fR
.
.IP "" 0
.
.P
This command adds a repository as a subrepo in a subdir of your repository\. It is similar in feel to \fBgit clone\fR\. You just specify the remote repo url, and optionally a sub\-directory and/or branch name\. The repo will be fetched and merged into the subdir\. The subrepo history is not added to your repo history, but a commit is added that contains the reference information\. This information is also stored in a special file called \fB<subdir>/\.gitrepo\fR\. The presence of this file indicates that the directory is a subrepo\.
.
.IP "\(bu" 4
\fBgit subrepo pull <subdir> [\-b <upstream\-branch>]\fR
.
.IP "" 0
.
.P
Update the subdir with the latest remote changes\. The subdir must be a subrepo (must contain a \.gitrepo file)\. You can change the upstream branch to use with the \'\-b\' flag\.
.
.IP "\(bu" 4
\fBgit subrepo push <subdir> [\-\-<merge\-strategy>]\fR
.
.IP "" 0
.
.P
Extract out the commits made to a branch called subrepo/\fIsubdir\fR, merge them with upstream, and push them back upstream\. If you don\'t specify a merge\-strategy, it means that you already ran a \'git subrepo checkout\' (which created a branch) and you want to push it upstream\. See the \'checkout\' command below\. Use the \'\-b\' flag to push to a remote branch that is different than the one the subrepo is tracking\.
.
.IP "\(bu" 4
\fBgit subrepo checkout <subdir>\fR
.
.IP "" 0
.
.P
This command create a local branch called subrepo/\fIsubrepo\fR, that contains all the subdir commit since the last pull\. This is useful when a subrepo push or pull has failed\. You can merge things by hand, then run a \'git subrepo push\' command with the same branch name\.
.
.IP "\(bu" 4
\fBgit subrepo status [<subdir>]\fR
.
.IP "" 0
.
.P
Get the status of a subrepo\. If no subdir is provided, get the status of all subrepos\.
.
.IP "\(bu" 4
\fBgit subrepo help\fR
.
.IP "" 0
.
.P
Same as \fBgit help subrepo\fR\. Will launch the manpage\. For the shorter usage, use \fBgit subrepo \-h\fR\.
.
.IP "\(bu" 4
\fBgit subrepo version\fR
.
.IP "" 0
.
.P
This command will display version information about git\-subrepo and its environment\.
.
.SH "Status"
The git\-subrepo command is at version 0\.1\.0\. I consider it ready to use in anger for my personal projects, but will wait a bit before promoting it widely\. Use your best judgement\.
.
.P
It has a test suite (run \fBmake test\fR), but surely has many bugs\. If you have expertise in this area, please review the code, and file issues on anything that seems wrong\.
.
.P
I am \'ingy\' on irc\.freenode\.net\. Find me if you want to chat about subrepo\.
.
.SH "Notes"
.
.IP "\(bu" 4
This command currently only works on POSIX systems\.
.
.IP "\(bu" 4
The \fBgit\-subrepo\fR repo itself has 2 subrepos under the \fBext/\fR subdirectory\.
.
.IP "" 0
.
.SH "Author"
Written by Ingy döt Net \fIingy@ingy\.net\fR
.
.SH "License and Copyright"
The MIT License (MIT)
.
.P
Copyright (c) 2013\-2014 Ingy döt Net
