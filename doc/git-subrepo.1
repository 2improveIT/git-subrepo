.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "GIT\-SUBREPO" "1" "February 2014" "" ""
.
.SH "NAME"
\fBgit\-subrepo\fR \- Git Submodule Alternative
.
.P
 \fIhttps://travis\-ci\.org/ingydotnet/git\-subrepo\fR
.
.SH "Synopsis"
.
.nf

git subrepo help

git subrepo clone <repo\-url> [<subdir>]
git subrepo pull <subdir> \-\-rebase
git subrepo push <subdir>
git subrepo checkout <subdir>
git subrepo status [<subdir>]

git subrepo version
.
.fi
.
.SH "Description"
This git command "clones" an external git repo and merges it into a subdirectory of your repo\. Later on, upstream changes can be pulled in, and local changes can be pushed back\. Simple\.
.
.SH "Benefits"
This command is an improvement on \fBgit\-submodule\fR and \fBgit\-subtree\fR; two other git commands with similar goals, but various problems\.
.
.P
This command assumes there are 3 main roles of people interacting with a repo, and attempts to serve them all well:
.
.IP "\(bu" 4
owner \- The person who authors/owns/maintains a repo\.
.
.IP "\(bu" 4
user \- People who are just using/installing the repo\.
.
.IP "\(bu" 4
collaborator \- People who commit code to the repo and subrepos\.
.
.IP "" 0
.
.P
The \fBgit\-subrepo\fR command benefits these roles in the following ways:
.
.IP "\(bu" 4
Simple and intuitive commandline usage\.
.
.IP "\(bu" 4
Users get your repo and all your subrepos just by cloning your repo\.
.
.IP "\(bu" 4
Users don\'t need to install git\-subrepo, ever\.
.
.IP "\(bu" 4
Collaborators don\'t need to install unless they want to push/pull\.
.
.IP "\(bu" 4
Collaborators know when a subdir is a subrepo (it has a \fB\.gitrepo\fR file)\.
.
.IP "\(bu" 4
A project with subrepos also has branches like \fBsubrepo/remote/foo\fR\.
.
.IP "\(bu" 4
And it also has remotes for each subrepo, like \fBsubrepo/foo\fR\.
.
.IP "\(bu" 4
Owners do not deal with the complications of keeping submodules in sync\.
.
.IP "\(bu" 4
Subrepos can contain other subrepos\.
.
.IP "\(bu" 4
Branching with subrepos just works\.
.
.IP "\(bu" 4
Moving/renaming a subrepo subdir just works\.
.
.IP "\(bu" 4
Your git history is kept squeaky clean\.
.
.IP "\(bu" 4
Upstream history is condensed into single commits\.
.
.IP "\(bu" 4
Every clone and pull is just one commit (plus a merge)\.
.
.IP "\(bu" 4
Commits pushed back upstream are NOT condensed\.
.
.IP "" 0
.
.SH "Installation"
Get the source code from GitHub:
.
.IP "" 4
.
.nf

git clone git@github\.com:ingydotnet/git\-subrepo
.
.fi
.
.IP "" 0
.
.P
Then run:
.
.IP "" 4
.
.nf

make test
make install        # Possibly with \'sudo\'
.
.fi
.
.IP "" 0
.
.P
This will install the \fBgit\-subrepo\fR command next to your other Git subcommands\. It will also install the manpage (for \fBgit help subrepo\fR)\.
.
.P
To use git\-subrepo WITHOUT installing:
.
.IP "" 4
.
.nf

export GIT_EXEC_PATH="/path/to/git\-subrepo/lib:$(git \-\-exec\-path)"
.
.fi
.
.IP "" 0
.
.SH "Commands"
.
.IP "\(bu" 4
\fBgit subrepo clone <repository> [<subdir>] [\-b <upstream\-branch>]\fR
.
.IP "" 0
.
.P
This command adds a repository as a subrepo in a subdir of your repository\. It is similar in feel to \fBgit clone\fR\. You just specify the remote repo url, and optionally a sub\-directory and/or branch name\. The repo will be fetched and merged into the subdir\. The subrepo history is not added to your repo history, but a commit is added that contains the reference information\. This information is also stored in a special file called \fB<subdir>/\.gitrepo\fR\. The presence of this file indicates that the directory is a subrepo\. The \fBclone\fR command also adds a new remote called \fBsubrepo/<subdir>\fR and a remote branch called \fBsubrepo/remote/<subdir>\fR\.
.
.IP "\(bu" 4
\fBgit subrepo pull <subdir> [\-\-<merge\-strategy>] [\-b <upstream\-branch>]\fR
.
.IP "" 0
.
.P
Update the subdir with the latest remote changes\. The subdir must be a subrepo (must contain a \.gitrepo file)\. You can change the upstream branch to use with the \'\-b\' flag\. If you specify a merge\-strategy like \fB\-\-rebase\fR or \fB\-\-ours\fR, the command will attempt to fetch, merge and integrate all in one step\. If you want to merge yourself, run a \fBgit subrepo checkout\fR first, merge yourself, then run \fBgit subrepo pull <subdir>\fR (with no merge flag), and your branch will be integrated (pulled) into the mainline repo\.
.
.IP "\(bu" 4
\fBgit subrepo push <subdir> [\-b <upstream\-branch>]\fR
.
.IP "" 0
.
.P
This command will make sure that you have already pulled (merged) the upstream head\. Then it will create a branch of the local history involving the subrepo, and push that back to the remote\. Use the \'\-b\' flag to push to a remote branch that is different than the one the subrepo is tracking\.
.
.IP "\(bu" 4
\fBgit subrepo checkout <subdir> [\-\-<merge\-strategy>]\fR
.
.IP "" 0
.
.P
This command creates a local branch called subrepo/\fIsubrepo\fR, that contains all the subdir commits since the last pull\. This is useful when a subrepo pull has failed\. You can merge things by hand, then run a \'git subrepo push\' command\. If you specify a merge\-strategy, then it will be applied against the remote head, in this new branch\. Finally, the \fBcheckout\fR command will actually checkout the new branch\.
.
.IP "\(bu" 4
\fBgit subrepo status [<subdir>] [\-v|\-\-verbose]\fR
.
.IP "" 0
.
.P
Get the status of a subrepo\. If no subdir is provided, get the status of all subrepos\. If the \fB\-\-verbose\fR flag is used, the remote repository will be queried to provide more information\.
.
.IP "\(bu" 4
\fBgit subrepo help\fR
.
.IP "" 0
.
.P
Same as \fBgit help subrepo\fR\. Will launch the manpage\. For the shorter usage, use \fBgit subrepo \-h\fR\.
.
.IP "\(bu" 4
\fBgit subrepo version\fR
.
.IP "" 0
.
.P
This command will display version information about git\-subrepo and its environment\.
.
.SH "Merge Strategy Flags"
When you \fBpull\fR from a subrepo, your local changes need to be merged in\. The following flags can be used to specify which merge strategy to use:
.
.IP "\(bu" 4
\fB\-\-rebase\fR
.
.IP "\(bu" 4
\fB\-\-merge\fR
.
.IP "\(bu" 4
\fB\-\-ours\fR
.
.IP "\(bu" 4
\fB\-\-theirs\fR
.
.IP "" 0
.
.P
These flags also can be used with the \fBcheckout\fR command\.
.
.SH "Status"
The git\-subrepo command is at version 0\.1\.0\. I consider it ready to use in anger for my personal projects, but will wait a bit before promoting it widely\. Use your best judgement\.
.
.P
It has a test suite (run \fBmake test\fR), but surely has many bugs\. If you have expertise in this area, please review the code, and file issues on anything that seems wrong\.
.
.P
I am \'ingy\' on irc\.freenode\.net\. Find me if you want to chat about subrepo\.
.
.SH "Notes"
.
.IP "\(bu" 4
This command currently only works on POSIX systems\.
.
.IP "\(bu" 4
The \fBgit\-subrepo\fR repo itself has 2 subrepos under the \fBext/\fR subdirectory\.
.
.IP "\(bu" 4
Written in (very modern) Bash, with full test suite\. Take a look\.
.
.IP "" 0
.
.SH "Author"
Written by Ingy döt Net \fIingy@ingy\.net\fR
.
.SH "License and Copyright"
The MIT License (MIT)
.
.P
Copyright (c) 2013\-2014 Ingy döt Net
