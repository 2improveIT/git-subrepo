== Development

+ Add remote-url and remote-branch on fetch
  - unless config.subrepo.auto-remote-add == false
  - unless config.subrepo.auto-branch-add == false

- Resolve outstanding github issues

- Wrap external commands
  - Show them on verbose
  - Always check return status
    - die with output on failure
- Implement verbose output

- Write `git subrepo fetch`

- Write more tests:
  - Make simple fixtures
  - Multiple push sessions
  - Test all error conditions:
    - test/error.t
  - Tests for reported rebase errors and other subtree badness

- Make the 'clean' command remove grafts

- Allow commands from any subdir.

- Update VERSION to 0.1.1
  - Tag when ready.

- Add version commit id to cmdver in .gitrepo.

- When .gitrepo is stable:
  - Delete and re-clone all subrepos in all repos using them

- Update Makefile to install:
  - git-subrepo.d/remote
  - git-subrepo.d/commit

== Promotion

- Git Commands
  - #git-commands
  - github.com/git-commands
  - Fork projects
  - git-commands.hacktive.com
  - Make a CogWeb site

- Invent a good symbolic system for dags
  - main and sub repo
  - users: owner, user, collab
  - commits: upstream sr head, local sr head, clone, pull, gitrepo

  owner/main: A-----B
  owner/subr: S-----T
  git subrepo clone owner/subr foo
  A-----B-----C
             /
      T'--T'+

== Done

+ Switch this repo from submodule to subrepo:
  + for test-more-bash & bashplus
  + Need to switch those first
  + Redo here

+ Save and reset rev state for push/checkout

x Save former pushed commit
  x This can be saved in .git/info/subrepo/pushed

x Add more meta info to .gitrepo file:
  x cloned - original upstream commit

+ Remove the 'remove' command.

+ Add new subcommands:
  + checkout
  + status
    + See what submodule and subtree do.

+ Implement clean
+ Implement --all
+ Review doc/readme
x Change former/parent to before
x Add comments before each config field
x Apply the transplant_prefix branch (use xxd)
